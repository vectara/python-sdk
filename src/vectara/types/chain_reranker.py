# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.pydantic_utilities import update_forward_refs


class ChainReranker(UniversalBaseModel):
    type: typing.Literal["chain"] = "chain"
    rerankers: typing.List["SearchReranker"] = pydantic.Field()
    """
    Specify an array of rerankers to apply to search results consecutively.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .search_reranker import SearchReranker  # noqa: E402

update_forward_refs(ChainReranker)
