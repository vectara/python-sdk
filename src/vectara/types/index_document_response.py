# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .core_document_part import CoreDocumentPart
from .document_storage_usage import DocumentStorageUsage
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class IndexDocumentResponse(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Document ID.
    """

    metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    The document metadata.
    """

    parts: typing.List[CoreDocumentPart] = pydantic.Field()
    """
    The document parts stored - in the case of a structured document, the converted document.
    """

    storage_usage: typing.Optional[DocumentStorageUsage] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
